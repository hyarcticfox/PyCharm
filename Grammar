Python中from...import与import......as的区别

from...import
如 from A import b,相当于
import A
b=A.b
在此过程中有一个隐含的赋值的过程

import......as
import A as B,给予A库一个B的别称，帮助记忆

类继承中的super
用于调用父类(超类)的一个方法。
super(Class, self).xxx
构造方法中的初始值无法继承,使用super函数会查找所有的超类，以及超类的超类，直到找到所需的特性为止。


python 中的" %s"%用法 
一种字符串格式化的语法， 基本用法是将值插入到%s占位符的字符串中。
%s,表示格式化一个对象为字符            
%s  string型  表示格式化一个对象为字符    "%s1"%S2   s1放置的是一个字符串(格式化字符串)  S2放置的是一个希望要格式化的值
例：
string = "good"  #类型为字符串
print("string=%s" %string)   #输出的打印结果为 string=good  
print("string=%3s" %string) # 输出的打印结果为 string=good(数字3的意思是：字符串的长度为3。当字符串的长度大于3时，按照字符串的长度打印出结果)
print("string=%+6s" %string)  # 输出的打印结果为 string=  good(当字符串的长度小于6时，在字符串的左侧填补空格，使得字符串的长度为6)
print("string=%-6s" %string)  # 输出的打印结果为 string=good  (当字符串的长度小于6时，在字符串的右侧填补空格，使得字符串的长度为6)
 
#小数点后的数字表示截取的字符串长度
print("string=%.3(6)s" %string)  # 输出的打印结果为 string=goo(good)(%.3s的意思是：截取字符串的前3个字符，当截取字符串的字符长度大于字符串时，输出的结果是整个字符串)
print("string=%a.bs" %string)  # 先是根据小数点后面的数字b截取字符串，当截取的字符串长度小于a时，需要在字符串的左侧填补空格，使得字符串的长度变为a
print("string=%*.*s" %(6, 3, string))  # %*.*s表示精度， 两个*的值分别由%string前面被两个逗号隔开的数值来指定
