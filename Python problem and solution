PyCharm报错:Please specify a different SDK name解决方法
这个问题出现的原因是因为PyCharm中存在相同名字的虚拟环境变量。
出错原因是，一直使用PyCharm的默认设置来建立工程，所以每个工程都建立了自己独立的虚拟环境。
删除了一些工程后，又建立相同名字的工程。所以才会出现存在相同的虚拟环境名的现象。
解决方法：Settings——Project Interpreter——show all 删除相同虚拟环境名字的虚拟环境

py文件需要放在venv文件夹下

关于虚拟interpreter中没有根interpreter的package问题

1. 进入Project Interpreters页面
文件(file)——>设置(setting)——>项目(Project)——>Project Interpreters
点击齿轮，选择Add Local
2. 选择Base interpreter
3. 勾选Inherit global site-packages（创建时应勾选）
   则可以使用base interpreter中的第三方库（及可以使用2中配置的python环境所安装的所有组件），不选将和外界完全隔离；

python、pip安装完后要在环境变量中添加python.exe路径，否则未安装成功
pip安装python库教程，链接http://blog.csdn.net/sd2558448/article/details/51234809

windows下pip安装python模块时报错总结
https://www.cnblogs.com/liaojiafa/p/5100550.html

Pycharm下QT工具加入
QtDesigner:
Settings-Tools-External Tools 添加：Name QtDesigner  Group Qt（随意）  
Program: QtDesigner所在路径   Working Directory: $ProjectFileDir$
Pyuic:
Settings-Tools-External Tools 添加：Name Pyuic  Group Qt（随意）  
Program: python.exe所在路径  Arguments: -m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py     Working Directory: $FileDir$

py工程pyinstaller打包
工程路径下 pyinstaller -F  -w  -i  xxx.ico  xxx.py   生成的exe在dist文件夹下
-F：是直接生成单独的exe文件，不附带各种依赖文件的。
-c：生成的exe文件打开方式为控制台打开。
-w：这个和上面的-c对应，如果你的程序是有ui的，那就用这个-w。这样不会出现控制台，直接是你的ui。
-i：给你的exe文件添加一个图标，后面要紧接着你想要的ico文件。
-p：后面紧跟着你要指定的模块搜索路径，如果你的模块安装的路径没有被PyInstaller自动检索到的话，就需要自己指定了。
--noconsole 表示不显示控制台。
出现“failed to excute script  xxx”
这个原因实在是太多了，他就是告诉你程序不能运行。如果你是用-w方式打包的，我们这样不能看出来问题的根源是什么。
所以我们还是以-c方式打包exe看一下控制台输出的error内容是什么。
打包之后用控制台执行生成的exe即可看到

python安装docx模块出现Import Error: No module named 'exceptions'的解决方案
通过命令行下载的docx安装包还没有完全兼容python3，因此需要自己找一个兼容的包进行安装，
地址为：https://www.lfd.uci.edu/~gohlke/pythonlibs/找到python_docx-0.8.6-py2.py3-none-any.whl，点击下载到本地
